% -*- latex -*-  (tell emacs to use LaTeX mode for file)
\documentclass[10pt]{article}

\usepackage{geometry}
\usepackage{holdoc}
\usepackage{examples}

\parskip 6pt plus 12pt
\parindent 0pt

\begin{document}

\title{HOLDoc Examples}
\author{Keith Wansbrough}
\date{11 June, 2003}
\maketitle

\section{Introduction}

This document gives some basic examples of the use of the HOLDoc
munger.  You should examine the source (\texttt{\jobname.mng}) and the
resulting output (\texttt{\jobname.dvi}) together.

\section{Basics}

HOLDoc allows you to insert HOL terms into your \LaTeX{} documents at
will.  For example, the term [[!x y. x<y \/ x=y \/ x>y]] can be
entered in a document as
\verb+[+\verb+[!x y. x<y \/ x=y \/ x>y]+\verb+]+.
% we need to avoid the sequence bracket-bracket in the verbatim
% version, or else it will get munged too!

Subscripts and primes are handled appropriately:
given that [[sqdist
(x,y,x',y') = (x'-x)*(x'-x)+(y'-y)*(y'-y)]], it is the case that [[!x1
y1 x2 y2 d. ?x y x' y'.sqdist(x1,y1,x,y) = sqdist(x2,y2,x,y) /\
sqdist(x1,y1,x',y') = sqdist(x2,y2,x',y') /\ sqdist(x,y,x',y') =
d*d]].

While some variables (those bound in the given term by [[!]], [[?]],
[[?!]], or [[\ ]]) are automatically discovered, others must be
specified by \verb+VAR_PREFIX_LIST+ directives.  Identifiers that
HOLDoc does not know about are by default marked in [[red]], and a
warning is emitted to stderr.  This helps you to locate the source of
the problem so that it can be rectified.  Note that directives can
appear in \verb+.imn+ files or in the document itself.

HOL can be embedded in math mode as well as in running text, by using
\verb+<+\verb+[+\dots\verb+]+\verb+>+ as the delimiters:
\[
\begin{array}{lcll}
<[e]> & ::= & <[ n       ]> & \text{literal}\\
      & \mid& <[ x       ]> & \text{variable}\\
      & \mid& <[ \x:t.e  ]> & \text{abstraction}\\
      & \mid& <[ e1 e2   ]> & \text{application}\\
      & \mid& <[ e1 + e2 ]> & \text{primitive}
\end{array}
\]

To make this easier, a useful hack is to define certain identifiers to
translate to themselves, such as \verb+&+:
\[
\begin{array}{lclll}
<[ (\x:t.e1) e2 & --> & SUB e2 x e1 & ]> & (\beta)\\
<[ n1 + n2      & --> & n           & (n = n1 + n2) ]>& (\delta)
\end{array}
\]

Although HOLDoc is basically only a lexer (a rudimentary parser exists
to cope with possibly-curried functions, as in the substitution above,
which was typed as \verb+SUB e2 x e1+), some impressive effects can be
achieved:
\[
\begin{array}{c}
\strut\\
\hline
<[ G, x:t |- x : t ]>
\end{array}
\qquad
\begin{array}{c}
<[ G, x:t1 |- e : t2 ]>\\
\hline
<[ G |- \x:t1.e : t1 -> t2 ]>
\end{array}
\qquad
\begin{array}{c}
<[ G |- e1 : t1 -> t2 ]>
\quad
<[ G |- e2 : t1 ]>\\
\hline
<[ G |- e1 e2 : t2 ]>
\end{array}
\]

The rest is up to your imagination!

\section{The rest}

Not described in this document:
\begin{itemize}
\item The categories of identifier (variable, type, constructor,
record field, library identifier, auxiliary, auxiliary infix, HOL
operator, HOL symbol, HOL identifier, curried HOL identifier), the
corresponding directives and how to use them.
\item The \verb+SPECIAL+ directive, and HOL symbols containing
nonaggregating characters.
\item Modes: \verb+NEWMODE+ and \verb+MODE+.
\item \verb+ECHO+/\verb+NOECHO+.
\item \verb+INDENT+/\verb+NOINDENT+.
\item \verb+SMART_PREFIX+/\verb+NO_SMART_PREFIX+.
\item \verb+HOLDELIM+.
\item (LTS only: \verb+VARS+, \verb+SHOWRULE+, \verb+RCSID+).
\end{itemize}


\end{document}
