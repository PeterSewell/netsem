% -*-LaTeX-*-
\documentclass[10pt,oneside]{book}

\newif\ifdraft\drafttrue



\usepackage{alltt}
\usepackage{ifpdf}
\usepackage{ltsmunge}
%\usepackage{udpstuff}

\usepackage{tcp}

% override definition of \tsunknown, making it black not red.
\renewcommand{\tsunknown}[1]{\tsvar{#1}}

\usepackage[dvips,a4paper]{geometry}  % US Letter /\ ISO A4

%hacked from doc/tr.mng
 \geometry{
    a4paper,
    dvips,
    twoside,
    left=25.4mm, right=25.4mm,
%    top=10mm,  bottom=30mm,
%=
    top=20mm,  bottom=30mm,
% 1.168
    headheight=\baselineskip,
    headsep=10mm, footskip=10mm, %should be equal
%
%20pc (3.33in) wide and 54pc (9in) tall with a column gutter of 2pc (0.33in)
% so 7in wide, 9in tall.
%    177.8mm   228.6
% leaving from a4:  32.2mm   68.4mm
% dividing by 2:    16.1mm    ...
%    left=16.1mm, right=16.1mm,
%    top=20mm,  bottom=28.4mm,
  }


\makeatletter
\newcommand{\ps@jdstyle}{%
  \def\@evenhead{\thepage\hfil}%
  \def\@oddhead{\hfil\thepage}%
  \def\@evenfoot{}%
  \let\@oddfoot\@evenfoot
}
\makeatother

\pagestyle{jdstyle}

\newcommand{\mignore}[1]{}
\ifdraft
  \newcommand{\TODO}[1]{{}[TODO: #1]{}}
\else
  \newcommand{\TODO}[1]{[TODO]}

\fi

\def\rulesrcsid{}

% use the right flavour of specials for pdflatex vs dvips->ps2pdf
\ifpdf
\def\myoutputdriver{}
\else
\def\myoutputdriver{dvips,}
\fi

% load as late as possible
\usepackage[\myoutputdriver pdfpagelabels,linktocpage,colorlinks,linkcolor=blue,pagecolor=blue]{hyperref}


% Ugh, get rid of annoying warnings.  We will hope that the substitutions
% hyperref does to get a PDF-safe string for the various anchors are OK.
\makeatletter
\def\HyPsd@CatcodeWarning#1{}

\RequirePackage{float}
% \namedcontents{title}{extension} generates a table of contents from
%    a specified auxiliary file (requires float.sty).
%
\newcommand{\namedcontents}[2]{%
  \@namedef{ext@namedcontents}{#2}
  \listof{namedcontents}{#1}}
\makeatother

\makeatletter
% enlarge number space to make room for large numbers nn.nn(.nn):
%\newcommand*\l@section{\@dottedtocline{1}{1.5em}{2.3em}}
%\newcommand*\l@subsection{\@dottedtocline{2}{3.8em}{3.2em}}
\renewcommand\l@section{\@dottedtocline{1}{1.5em}{2.7em}}
\renewcommand\l@subsection{\@dottedtocline{2}{4.2em}{3.8em}}
\makeatother

\sloppy


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% stuff included from stream_spec document

%\documentclass[a4paper,11pt,twocolumn]{article}
%\documentclass[nocopyrightspace,preprint]{sigplanconf} % and uncomment
                                % amspackages
%\documentclass[conference,letterpaper]{IEEE/IEEEtran} % and uncomment
                                % amspackages
%\documentclass{llncs2e/llncs} % and uncomment amspackages

%\usepackage{float}
%\restylefloat{figure} \floatstyle{ruled}
%FIXME change rule style in figures to omit bounding box
%\floatstyle{plain}

\usepackage{color}
%\usepackage{multicol}
\newcommand{\nnn}{30}

% hack: these two seem to be required for some reason, but are not
% defined on P's laptop latex
%\definecolor{lightgray}{rgb}{0.5,0.5,0.5}
%\definecolor{darkgray}{rgb}{0.2,0.2,0.2}

\newif\iffinal\finaltrue

\sloppy

%\newif\ifdraft\drafttrue
\newif\ifdraft\draftfalse

%\newif\ifanon\anontrue
\newif\ifanon\anonfalse

%\iffinal
%\else
%\usepackage{geometry}
%\fi

\newcommand{\trimbox}[1]{\raisebox{0pt}[1.20ex][0.2ex]{#1}}
\newcommand{\cg}[1]{\colorbox{lightgray}{\trimbox{$#1$}}}


\usepackage{ltsmunge}
%\usepackage{multicol}

\renewcommand{\tsunknown}[1]{\tsvar{#1}}

\usepackage{tcp}
%\usepackage{alldoctex/tcp}
\usepackage{url}
\usepackage{alltt}

\usepackage{epsfig}
\usepackage{psfrag}
% for Michael's text
\usepackage{pstricks}
%\usepackage{pst-node}
 \usepackage{proof}
% \usepackage[all]{xy}

\usepackage{verbatim}
%\usepackage{parskip}
%\usepackage{float}
%\floatstyle{ruled}
%\restylefloat{table}
\usepackage{graphics}

\usepackage{array}


% Non-enclosing figure brackets, by Keith Wansbrough
%   (after Andy Gordon and Don Syme)
%\newlength{\BrackWidth}\setlength{\BrackWidth}{0.7pt}
\newlength{\varDashLength}\setlength{\varDashLength}{2pt}
\newcommand{\varTopBracket}{%
  \par\noindent
  \rlap{\rule[-\varDashLength]{\BrackWidth}{\varDashLength}}%
  \rule{\linewidth}{\BrackWidth}%
  \llap{\rule[-\varDashLength]{\BrackWidth}{\varDashLength}}%
  \par
}
\newcommand{\varBottomBracket}{%
  \par\noindent
  \rlap{\rule{\BrackWidth}{\varDashLength}}%
  \rule{\linewidth}{\BrackWidth}%
  \llap{\rule{\BrackWidth}{\varDashLength}}%
  \par
}
\newcommand{\varrrenbox}[1]{%
  \varTopBracket
%  \rrnormalsize{}
\vspace{-2mm}
{\small
  #1%
}
\vspace{-3mm}
\varBottomBracket
}

\renewcommand{\ddefnn}[4]{%
  \varrrenbox{%
    \dodefnindex{#2}%
    \ltslabel{#1}%
    \rrenside{#3}%
  }%
}

%
% \iffinal
% \else
%   \geometry{
%     paperwidth=8.5in,    % US Letter
%     paperheight=11in,    %
%     dvips,
%     twoside,
%     twosideshift=0mm,
%     left=1.0in, textwidth=6.5in, %right=25.4mm,
%     top=0mm,  %bottom=30mm,
%     textheight=9.0in,
%     headheight=5mm,
%     %headsep=00mm, footskip=10mm, %should be equal
% %
% %20pc (3.33in) wide and 54pc (9in) tall with a column gutter of 2pc (0.33in)
% % so 7in wide, 9in tall.
% %    177.8mm   228.6
% % leaving from a4:  32.2mm   68.4mm
% % dividing by 2:    16.1mm    ...
% %    left=16.1mm, right=16.1mm,
% %    top=20mm,  bottom=28.4mm,
%   }
% \fi

%   \geometry{
%     paperwidth=210mm,    % US Letter /\ ISO A4
%     paperheight=11in,    %
%     dvips,
%     twoside,
%     twosideshift=0mm,
%     left=25.4mm, right=25.4mm,
%     top=20mm,  bottom=30mm,
%     headheight=\baselineskip,
%     headsep=10mm, footskip=10mm, %should be equal
% %
% %20pc (3.33in) wide and 54pc (9in) tall with a column gutter of 2pc (0.33in)
% % so 7in wide, 9in tall.
% %    177.8mm   228.6
% % leaving from a4:  32.2mm   68.4mm
% % dividing by 2:    16.1mm    ...
% %    left=16.1mm, right=16.1mm,
% %    top=20mm,  bottom=28.4mm,
%   }


%\usepackage{fullpage}

\newenvironment{tightlist}{\begin{list}{$\bullet$}{
  \setlength{\itemsep}{0mm}
  \setlength{\parsep}{0mm}
  \setlength{\itemindent}{3mm}
  \setlength{\leftmargin}{3mm}
%  \setlength{\labelsep}{0mm}
%  \setlength{\labelwidth}{0mm}
%  \setlength{\topsep}{0mm}
}}{\end{list}}

\usepackage{xspace}
 \newcommand{\eg}{e.g.\@\xspace}
 \newcommand{\cf}{cf.\@\xspace}
 \newcommand{\wrt}{w.r.t.\@\xspace}
 \newcommand{\etal}{\emph{et al.}\@\xspace}
 \newcommand{\ia}{inter alia\xspace}
 \newcommand{\etc}{etc.\@\xspace}


%\newcommand{\myheading}[1]{\noindent\textbf{#1}}

\newcommand{\myheading}[1]{\vspace{0.5\baselineskip}\par\noindent\textbf{#1}\quad}
\newcommand{\myfirstheading}[1]{\par\noindent\textbf{#1}\quad}


%\input{generated/alldoc-inc.tex}
\input{generated/Spec3_alldoc-inc.tex}

%%2009-02-18\begin{document}
%%2009-02-18
%%2009-02-18\title{A rigorous approach to networking: \\TCP, from implementation to protocol to service}
%%2009-02-18
%%2009-02-18
%%2009-02-18\author{Tom Ridge\inst{1}, Michael Norrish\inst{2}, and Peter Sewell\inst{1}}
%%2009-02-18
%%2009-02-18\institute{University of Cambridge \and NICTA}
%%2009-02-18
%%2009-02-18%\author{
%%2009-02-18%\IEEEauthorblockN{Michael Norrish}\IEEEauthorblockA{NICTA\\\url{michael.norrish@nicta.com.au}}
%%2009-02-18%\and
%%2009-02-18%\IEEEauthorblockN{Tom Ridge}\IEEEauthorblockA{University of Cambridge\\\url{Thomas.Ridge@cl.cam.ac.uk}}
%%2009-02-18%\and
%%2009-02-18%\IEEEauthorblockN{Peter Sewell}\IEEEauthorblockA{University of
%%2009-02-18%  Cambridge\\\url{Peter.Sewell@cl.cam.ac.uk}}
%%2009-02-18%}
%%2009-02-18%\date{\today}
%%2009-02-18%\title{Abstracting TCP: a stream-level specification}
%%2009-02-18\maketitle
%%2009-02-18
%%2009-02-18\begin{abstract}
%%2009-02-18
%%2009-02-18Despite more then 30 years of research on protocol
%%2009-02-18specification, the major protocols deployed in the Internet, such as TCP,
%%2009-02-18are described only in informal prose RFCs and executable code.
%%2009-02-18In part this is because the scale and complexity of these protocols
%%2009-02-18makes them challenging targets for formalization.
%%2009-02-18
%%2009-02-18\ \ \ In this paper we show how these difficulties can be addressed.
%%2009-02-18%show how such real-world protocols can be addressed
%%2009-02-18%formally.
%%2009-02-18We
%%2009-02-18develop a high-level specification for TCP and the
%%2009-02-18Sockets API, expressed in the HOL proof assistant, describing the byte-stream
%%2009-02-18service that TCP provides to users.  This complements our previous
%%2009-02-18low-level specification of the protocol internals,
%%2009-02-18and makes it possible for the first time to state what it means for
%%2009-02-18TCP to be correct: that the protocol implements the service.
%%2009-02-18%
%%2009-02-18%
%%2009-02-18We
%%2009-02-18define a precise abstraction function between the models and validate
%%2009-02-18it by testing, using verified testing infrastructure within HOL.
%%2009-02-18%
%%2009-02-18This is a pragmatic alternative to full proof, providing reasonable
%%2009-02-18confidence at a relatively low entry cost.
%%2009-02-18%Proving such a result would be a very major undertaking, so instead
%%2009-02-18%
%%2009-02-18
%%2009-02-18
%%2009-02-18
%%2009-02-18
%%2009-02-18\ \ \ Together with our previous validation of the low-level model, this shows how one can rigorously tie together
%%2009-02-18concrete implementations,
%%2009-02-18low-level protocol models,
%%2009-02-18and specifications of the services they claim to provide, dealing with the complexity of
%%2009-02-18real-world protocols throughout.
%%2009-02-18
%%2009-02-18% ------------------------------
%%2009-02-18%
%%2009-02-18% % ?
%%2009-02-18% % internal/external
%%2009-02-18% % implementor's/user's
%%2009-02-18% %
%%2009-02-18% % don't really like "implentor's" and "users's"  words
%%2009-02-18% %
%%2009-02-18% FIXME doing for real hairy protocol
%%2009-02-18%
%%2009-02-18% Protocols and the service they provide are usually described in
%%2009-02-18% informal prose RFCs.
%%2009-02-18% In previous work
%%2009-02-18% % \cite{TCP:paper,TCP:POPLpaper} %[SIGCOMM'05, POPL'06]
%%2009-02-18% % don't write the cites like that in the actual paper, only in the
%%2009-02-18% % web-form abstract!
%%2009-02-18% we developed a formal low-level protocol
%%2009-02-18% model of TCP in HOL, in terms of individual TCP segments on the wire.
%%2009-02-18%
%%2009-02-18% A network protocol, such as TCP, can be viewed at three levels: the
%%2009-02-18% high-level \emph{service} that it provides to applications, the
%%2009-02-18% low-level \emph{protocol} that implements that service, and the
%%2009-02-18% \emph{realisation} of that protocol in endpoint implementation code.
%%2009-02-18% %
%%2009-02-18% In previous work
%%2009-02-18% % \cite{TCP:paper,TCP:POPLpaper} %[SIGCOMM'05, POPL'06]
%%2009-02-18% % don't write the cites like that in the actual paper, only in the
%%2009-02-18% % web-form abstract!
%%2009-02-18% we developed a low-level protocol
%%2009-02-18% model of TCP, in terms of individual TCP segments on the wire.
%%2009-02-18% %
%%2009-02-18% In this paper we develop a companion high-level service specification
%%2009-02-18% in terms of reliable byte streams.
%%2009-02-18% %
%%2009-02-18% Further, we define a precise abstraction function between the two specifications,
%%2009-02-18% explaining \emph{how} the protocol implements the service.
%%2009-02-18% %, mapping low-level states onto high-level streams.
%%2009-02-18% %
%%2009-02-18% We establish confidence by experimentally validating both specifications, and the abstraction
%%2009-02-18% function, against representative traces of the
%%2009-02-18% BSD implementation.
%%2009-02-18%
%%2009-02-18% Protocols and the service they provide are usually described in
%%2009-02-18% informal prose RFCs.
%%2009-02-18% %
%%2009-02-18% We use higher-order logic supported by the HOL theorem prover to
%%2009-02-18% provide a formal mechanized specification, abstraction function, and
%%2009-02-18% validation infrastructure.
%%2009-02-18% %
%%2009-02-18% The service specification can be used for (informal and formal)
%%2009-02-18% reasoning about applications above the Sockets API.
%%2009-02-18% %
%%2009-02-18% Moreover, for the first time it is possible to state precisely what it means for TCP to be correct: that the protocol implements the service.
%%2009-02-18%
%%2009-02-18% We thereby show how one can rigorously tie together
%%2009-02-18% concrete implementations,
%%2009-02-18% low-level protocol models,
%%2009-02-18% and specifications of the services they claim to provide, dealing with the complexity of
%%2009-02-18% real-world protocols throughout.
%%2009-02-18
%%2009-02-18\end{abstract}
%%2009-02-18
%%2009-02-18%\tableofcontents
%%2009-02-18
%%2009-02-18%FIXME correctness of TCP- be precise about what this is (not timeliness, stability of net etc.)
%%2009-02-18
%%2009-02-18%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%2009-02-18

% end of stuff included from stream_spec doc
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%







\begin{document}

\frontmatter

% two dummy pages for Markus to remove; this is necessary when using
% PDF /PageLabels to get sensible page numbers, because that command
% maps physical page numbers to page labels, and Markus's workflow
% (not unreasonably) doesn't know to add 2 to all the physical page
% numbers when inserting those two new pages.
%~
%\clearpage
%~
%\clearpage

%\setcounter{page}{3}

\newif\ifpeter\petertrue

\ifpeter
\title{TCP, UDP, and Sockets:\\ \ \\Volume 3: The Service-level Specification \ \\ \ \\
%{\huge\bf --- DRAFT --- \\ --- PLEASE DO NOT CIRCULATE ---}%
}
\author{%
%    Steve Bishop$^*$\\
%    Matthew Fairbairn$^*$\\
    Thomas Ridge$^*$\\
    Michael Norrish$^\dagger$\\
    Peter Sewell$^*$\\[4mm]
%    Michael Smith$^*$\\
%    Keith Wansbrough$^*$\\[1ex]
    ${}^*$University of Cambridge Computer Laboratory\\
    ${}^\dagger$NICTA, Canberra}
\date{\today}
\else
\title{TCP, UDP, and Sockets:\\ a post-hoc validated behavioural
    specification\\ \ \\
{\large THIS DOCUMENT IS A CONFIDENTIAL DRAFT -- PLEASE DO NOT DISTRIBUTE.}}
\author{The Netsem Team\\
University of Cambridge Computer Laboratory}
\date{\today}
\fi
\maketitle


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%\begin{abstract}
\chapter*{Abstract}
\input{abstract}

% ------------------------------
%
% % ?
% % internal/external
% % implementor's/user's
% %
% % don't really like "implentor's" and "users's"  words
% %
% FIXME doing for real hairy protocol
%
% Protocols and the service they provide are usually described in
% informal prose RFCs.
% In previous work
% % \cite{TCP:paper,TCP:POPLpaper} %[SIGCOMM'05, POPL'06]
% % don't write the cites like that in the actual paper, only in the
% % web-form abstract!
% we developed a formal low-level protocol
% model of TCP in HOL, in terms of individual TCP segments on the wire.
%
% A network protocol, such as TCP, can be viewed at three levels: the
% high-level \emph{service} that it provides to applications, the
% low-level \emph{protocol} that implements that service, and the
% \emph{realisation} of that protocol in endpoint implementation code.
% %
% In previous work
% % \cite{TCP:paper,TCP:POPLpaper} %[SIGCOMM'05, POPL'06]
% % don't write the cites like that in the actual paper, only in the
% % web-form abstract!
% we developed a low-level protocol
% model of TCP, in terms of individual TCP segments on the wire.
% %
% In this paper we develop a companion high-level service specification
% in terms of reliable byte streams.
% %
% Further, we define a precise abstraction function between the two specifications,
% explaining \emph{how} the protocol implements the service.
% %, mapping low-level states onto high-level streams.
% %
% We establish confidence by experimentally validating both specifications, and the abstraction
% function, against representative traces of the
% BSD implementation.
%
% Protocols and the service they provide are usually described in
% informal prose RFCs.
% %
% We use higher-order logic supported by the HOL theorem prover to
% provide a formal mechanized specification, abstraction function, and
% validation infrastructure.
% %
% The service specification can be used for (informal and formal)
% reasoning about applications above the Sockets API.
% %
% Moreover, for the first time it is possible to state precisely what it means for TCP to be correct: that the protocol implements the service.
%
% We thereby show how one can rigorously tie together
% concrete implementations,
% low-level protocol models,
% and specifications of the services they claim to provide, dealing with the complexity of
% real-world protocols throughout.

%\end{abstract}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%% \TODO{
%% \chapter*{TODO}
%% TODO: do the body TODOs.  P has partitioned them into
%% \begin{itemize}
%% \item TODO1 doc issue
%% \item TODO2 spec semantic issue
%% \end{itemize}
%% (both of which someone
%% must address one way or another before we release)  and
%% \begin{itemize}
%% \item TODO: (which either don't appear or which we
%% might leave in the published document, depending)
%% \end{itemize}
%% He's endeavouring to ensure
%% that all the things that need doing before we release \emph{are}
%% flagged TODO1/2.
%% (this done through the early files and as much of hostLTSScript as
%% I've been through)
%%
%% TODO: possibly make this and the overview document use the same print
%% area (but maybe not, as this would be uncomfortably big for that)
%%
%%
%% MUNGER TODOS:
%%
%% - respect source line breaks in applications of multi-arg functions,
%%   eg [[MIN]] (2 kinds of MIN?)
%%
%% - (perhaps) fix typesetting of summaries so that the rule category hardly ever wraps
%%
%% - (perhaps) Confused - \texttt{connect\_1} already has such a thing: allow rule header
%%   one-line-ers to be more than one line long
%%
%% - (perhaps) DONEish - already did this in general, but in deliver-loop-99 and
%%   friends with records in the LHS and RHS, for TeXnical reasons this
%%   will be harder and I'm not doing it:
%%   more uniform indenting of multiple host record fields?
%%
%% - (perhaps) do something better (if we can) about the fonts of things like
%%   [[fd]] used both as type and variable identifiers.  Likewise for the
%%   font of [[listen]] qua host record field
%%
%% - (perhaps) we get a few mystery page breaks, eg just after a Variations header
%%
%% - (perhaps, if easy) make the index contain pointers to the usages of
%%   everything (up to some bounded number)
%%
%% - (perhaps) include verbatim protocol headers in nettypes
%%
%% - (perhaps) teach munger about let-bound identifiers
%%
%% - (perhaps) allow there to be ``summary''s at the starts of
%%   \emph{chapters}, to avoid the dummy sections in the host LTS bits
%%   (or we could merge all those into one chapter, but P guesses that
%%   would be harder to navigate)
%%
%% - (perhaps) add rule page numbers to summaries?
%%
%% DONES:
%%
%% ALREADY DONE: make the brief contents include the non-socket-call LTS rules
%% (but none of their aux functions, I think)
%%
%%
%% CHECK: make sure the page size is ok for usletter, for this and for the
%% overview document (think DONE, but must verify)
%%
%% - DONE: fix typesetting of missing definitions (flagged FIXME, or TODO, or something)
%%
%% - DONE: sloppy spacing for text?  turned on now.
%%
%% - DONE: fix typesetting of embedded transitions, eg in epsilon1
%%
%% - DONE: make \texttt{cb\_foo} and friends not typeset \texttt{foo} as a subscript
%%
%% - DONE, assuming this means at the end of all those sections (i.e.,
%%   description/model details/variations/internal), not right after the
%%   description block: bit more space after a description block
%%
%% - DONE: fix the layout of transitions in rules like deliver-in-99 where the
%%   source $h$ is on a line below the arrow and target $h'$
%%
%% - DONE: fix typesetting of big disjunctions, eg in accept1 where almost
%%   all of it runs of the end of a single line
%%
%% - DONE: fix typesetting of [[unit]] and [[string]] and [[msgflag]]
%%   (KW: that was just a typo, should be msgbflag), eg in the bind preamble
%%
%% - DONE: fix typesetting of option\_case, eg as in bind2.
%%   \textbf{fold}$_\uparrow$ doesn't mean much.
%%
%% - DONE: typeset \texttt{rptcp} etc without the \texttt{rp}
%%
%% - DONE: (perhaps) reinstate subscripts for [[is1]], [[p1]] etc.  Why did
%% they go away?
%%
%% - DONE: fix contentsline macros to have space between the number and the
%%   header
%%
%% }
%% \newpage

{\small
\addcontentsline{toc}{chapter}{Brief Contents}
\namedcontents{Brief Contents}{tob}
}
\cleardoublepage

\addcontentsline{toc}{chapter}{Full Contents}
\namedcontents{Full Contents}{toc}
%\tableofcontents

\clearpage
\mainmatter


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% include FM'08 paper, suitably adapted

% stream_spec.tex needs to be build in subdir
\part{Overview} \label{part:overview}
%\chapter{Overview of the service-level specification}


\chapter{Introduction to the service-level specification} \label{chap:fm08}
\input{stream_spec/stream_spec.tex}



\newpage

\makeatletter
\newcommand{\ps@idstyle}{%
  \def\@evenhead{\thepage\hfil\slshape\rightmark}%
  \def\@oddhead{{\slshape\leftmark}\hfil\thepage}%
  \def\@evenfoot{\hfil\slshape\footnotesize Rule version: \rulesrcsid\hfil}%
  \let\@oddfoot\@evenfoot
}
\makeatother
\pagestyle{idstyle}


