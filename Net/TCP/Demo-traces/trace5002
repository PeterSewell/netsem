(* Test Host: BSD(john)  Aux Host: LINUX(alan) *)
(* Test Description: [TCP normal] Demonstration: create a listening socket on the auxiliary host; create a socket on the local host and connect to the listening socket; accept the connection; send a string and then receive the string on the auxiliary host; close both sockets (no tcpcb) *)

(* -------------------------------------------------------------------------- *)
(* Netsem logging & merging tool (mlogger) - Date: Thu Dec  9 17:35:55 2004   *)
(* -------------------------------------------------------------------------- *)
(* Netsem Slurper - Initialised on host:  *)
(* Date: Thu Dec  9 17:35:59 2004 Source Host Option (-h): Some 192.168.0.12 *)
(* NTP STATUS:
status=06f4 leap_none, sync_ntp, 15 events, event_peer/strat_chg,
offset=0.691
 *)
(* -------------------------------------------------------------------------- *)
(* Applying NTP offset: 691us *)
(* -------------------------------------------------------------------------- *)

(* ns_socket library initialised: connected to 192.168.0.1:37810 *)
(* Date: Thu Dec  9 17:36:04 2004 Host:  *)
(* NTP STATUS:
status=06f4 leap_none, sync_ntp, 15 events, event_peer/strat_chg,
offset=0.691
 *)
(* -------------------------------------------------------------------------- *)
(* Applying NTP offset: 691us *)
(* -------------------------------------------------------------------------- *)

(* -------------------------------------------------------------------------- *)
(* HOST *)
initial_host (IP 192 168 0 12) (TID 79525) (FreeBSD_4_6_RELEASE) F [] [(ETH 0, <| ipset := {IP 192 168 0 12}; primary := IP 192 168 0 12; netmask := NETMASK 24; up := T |>); (LO, <| ipset := {IP 127 0 0 1}; primary := IP 127 0 0 1; netmask:= NETMASK 8; up := T |>)] [<| destination_ip := IP 127 0 0 1; destination_netmask := NETMASK 8; ifid := LO |>;<| destination_ip := IP 192 168 0 0; destination_netmask := NETMASK 24; ifid := ETH 0 |>; <| destination_ip := IP 192 168 1 0; destination_netmask := NETMASK 24; ifid := ETH 0 |>] initial_ticker_count initial_ticker_remdr
(* TSOH *)
(* Injector: not running *)
(* -------------------------------------------------------------------------- *)
(* BEGIN  *)

(* BASETIME *)
abstime 1102613764 425603
(* EMITESAB *)

(** 1102613764.425603 "ns0" **)
(* Merge Index: 0 *)
 Lh_call(TID 79525, socket(SOCK_STREAM));

(* Merge Index: 1 *)
Lh_epsilon(duration 0 31242);

(** 1102613764.456845 "ns1" **)
(* Merge Index: 2 *)
 Lh_return(TID 79525, OK(FD 8));

(* Merge Index: 3 *)
Lh_epsilon(duration 0 43657);

(** 1102613764.500502 "ns2" **)
(* Merge Index: 4 *)
 Lh_call(TID 79525, bind(FD 8, SOME(IP 192 168 0 12), SOME(Port 3333)));

(* Merge Index: 5 *)
Lh_epsilon(duration 0 401);

(** 1102613764.500903 "ns3" **)
(* Merge Index: 6 *)
 Lh_return(TID 79525, OK());

(* Merge Index: 7 *)
Lh_epsilon(duration 0 1998);

(** 1102613764.502901 "ns4" **)
(* Merge Index: 8 *)
 Lh_call(TID 79525, listen(FD 8, 3));

(* Merge Index: 9 *)
Lh_epsilon(duration 0 319);

(** 1102613764.503220 "ns5" **)
(* Merge Index: 10 *)
 Lh_return(TID 79525, OK());

(* Merge Index: 11 *)
Lh_epsilon(duration 0 6179);

(** 1102613764.509399 "slurp0" **)
(* Merge Index: 12 *)
Lh_recvdatagram( TCP(<|
    is1 := SOME(IP 192 168 0 14);
    is2 := SOME(IP 192 168 0 12);
    ps1 := SOME(Port 3333);
    ps2 := SOME(Port 3333);
    seq := tcp_seq_local(n2w 959699258);
    ack := tcp_seq_foreign(n2w 0);
    URG :=   F;
    ACK :=   F;
    PSH :=   F;
    RST :=   F;
    SYN := T  ;
    FIN :=   F;
    win := n2w 5840;
    ws := SOME(CHR 0);
    urp := n2w 0;
    mss := SOME(n2w 1460);
    ts := SOME(ts_seq (n2w 78281764), ts_seq (n2w 0));
    data := []   (*""*)
    |>) );

(* Merge Index: 13 *)
Lh_epsilon(duration 0 971);

(** 1102613764.510370 "slurp1" **)
(* Merge Index: 14 *)
Lh_senddatagram(TCP(<|
    is1 := SOME(IP 192 168 0 12);
    is2 := SOME(IP 192 168 0 14);
    ps1 := SOME(Port 3333);
    ps2 := SOME(Port 3333);
    seq := tcp_seq_local(n2w 2706264489);
    ack := tcp_seq_foreign(n2w 959699259);
    URG :=   F;
    ACK := T  ;
    PSH :=   F;
    RST :=   F;
    SYN := T  ;
    FIN :=   F;
    win := n2w 57344;
    ws := SOME(CHR 0);
    urp := n2w 0;
    mss := SOME(n2w 1460);
    ts := SOME(ts_seq (n2w 572707373), ts_seq (n2w 78281764));
    data := []   (*""*)
    |>) );

(* Merge Index: 15 *)
Lh_epsilon(duration 0 383);

(** 1102613764.510753 "slurp2" **)
(* Merge Index: 16 *)
Lh_recvdatagram( TCP(<|
    is1 := SOME(IP 192 168 0 14);
    is2 := SOME(IP 192 168 0 12);
    ps1 := SOME(Port 3333);
    ps2 := SOME(Port 3333);
    seq := tcp_seq_local(n2w 959699259);
    ack := tcp_seq_foreign(n2w 2706264490);
    URG :=   F;
    ACK := T  ;
    PSH :=   F;
    RST :=   F;
    SYN :=   F;
    FIN :=   F;
    win := n2w 5840;
    ws := NONE;
    urp := n2w 0;
    mss := NONE;
    ts := SOME(ts_seq (n2w 78281765), ts_seq (n2w 572707373));
    data := []   (*""*)
    |>) );

(* Merge Index: 17 *)
Lh_epsilon(duration 0 494268);

(** 1102613765.005021 "ns6" **)
(* Merge Index: 18 *)
 Lh_call(TID 79525, accept(FD 8));

(* Merge Index: 19 *)
Lh_epsilon(duration 0 652);

(** 1102613765.005673 "ns7" **)
(* Merge Index: 20 *)
 Lh_return(TID 79525, OK(FD 9, (IP 192 168 0 14, Port 3333)));

(* Merge Index: 21 *)
Lh_epsilon(duration 0 3151);

(** 1102613765.008824 "slurp3" **)
(* Merge Index: 22 *)
Lh_recvdatagram( TCP(<|
    is1 := SOME(IP 192 168 0 14);
    is2 := SOME(IP 192 168 0 12);
    ps1 := SOME(Port 3333);
    ps2 := SOME(Port 3333);
    seq := tcp_seq_local(n2w 959699259);
    ack := tcp_seq_foreign(n2w 2706264490);
    URG :=   F;
    ACK := T  ;
    PSH := T  ;
    RST :=   F;
    SYN :=   F;
    FIN :=   F;
    win := n2w 5840;
    ws := NONE;
    urp := n2w 0;
    mss := NONE;
    ts := SOME(ts_seq (n2w 78281814), ts_seq (n2w 572707373));
    data := [CHR 72; CHR 101; CHR 108; CHR 108; CHR 111; CHR 33 ]   (*"Hello!"*)
    |>) );

(* Merge Index: 23 *)
Lh_epsilon(duration 0 1861);

(** 1102613765.010685 "ns8" **)
(* Merge Index: 24 *)
 Lh_call(TID 79525, recv(FD 9, 6, []));

(* Merge Index: 25 *)
Lh_epsilon(duration 0 679);

(** 1102613765.011364 "ns9" **)
(* Merge Index: 26 *)
 Lh_return(TID 79525, OK("Hello!", NONE));

(* Merge Index: 27 *)
Lh_epsilon(duration 0 2640);

(** 1102613765.014004 "slurp4" **)
(* Merge Index: 28 *)
Lh_recvdatagram( TCP(<|
    is1 := SOME(IP 192 168 0 14);
    is2 := SOME(IP 192 168 0 12);
    ps1 := SOME(Port 3333);
    ps2 := SOME(Port 3333);
    seq := tcp_seq_local(n2w 959699265);
    ack := tcp_seq_foreign(n2w 2706264490);
    URG :=   F;
    ACK := T  ;
    PSH :=   F;
    RST :=   F;
    SYN :=   F;
    FIN := T  ;
    win := n2w 5840;
    ws := NONE;
    urp := n2w 0;
    mss := NONE;
    ts := SOME(ts_seq (n2w 78281815), ts_seq (n2w 572707373));
    data := []   (*""*)
    |>) );

(* Merge Index: 29 *)
Lh_epsilon(duration 0 262);

(** 1102613765.014266 "slurp5" **)
(* Merge Index: 30 *)
Lh_senddatagram(TCP(<|
    is1 := SOME(IP 192 168 0 12);
    is2 := SOME(IP 192 168 0 14);
    ps1 := SOME(Port 3333);
    ps2 := SOME(Port 3333);
    seq := tcp_seq_local(n2w 2706264490);
    ack := tcp_seq_foreign(n2w 959699266);
    URG :=   F;
    ACK := T  ;
    PSH :=   F;
    RST :=   F;
    SYN :=   F;
    FIN :=   F;
    win := n2w 57920;
    ws := NONE;
    urp := n2w 0;
    mss := NONE;
    ts := SOME(ts_seq (n2w 572707424), ts_seq (n2w 78281814));
    data := []   (*""*)
    |>) );
